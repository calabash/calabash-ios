#!/usr/bin/env ruby

require 'rubygems'
require 'fileutils'
require 'cfpropertylist'
require 'rexml/document'


require File.join(File.dirname(__FILE__),"calabash-ios-helpers")
require File.join(File.dirname(__FILE__),"calabash-ios-generate")
require File.join(File.dirname(__FILE__),"calabash-ios-setup")
require File.join(File.dirname(__FILE__),"calabash-ios-sim")
require File.join(File.dirname(__FILE__),"calabash-ios-build")

@features_dir = File.join(FileUtils.pwd, "features")
@source_dir = File.join(File.dirname(__FILE__), '..', 'features-skeleton')
@script_dir = File.join(File.dirname(__FILE__), '..', 'scripts')
@framework_dir = File.join(File.dirname(__FILE__), '..', 'staticlib')

if (ARGV.length == 0)
  print_usage
  exit 0
end
cmd = ARGV.shift
if cmd == 'help'
  print_help
  exit 0
elsif cmd == 'gen'
  calabash_scaffold
  exit 0
elsif cmd == 'console'
  console
  exit 0
elsif cmd == 'build'
  build
  exit 0
elsif cmd == 'update'
  update(ARGV)
  exit 0
elsif cmd == 'run'
  run
  exit 0
elsif cmd == 'download'
  calabash_download(ARGV)
  exit 0
elsif cmd == 'setup'
  calabash_setup(ARGV)
  exit 0
elsif cmd == 'check'
  validate_setup(ARGV)
  exit 0
elsif cmd == 'submit'
  calabash_submit(ARGV)
  exit 0
elsif cmd == 'version'
  require 'calabash-cucumber'
  puts Calabash::Cucumber::VERSION
  exit 0
elsif cmd == 'sim'
  if ARGV.length == 0
    print_usage
    exit 0
  end
  subcmd = ARGV.shift

  if subcmd == 'reset'
    calabash_sim_reset
  elsif subcmd == 'acc'
    calabash_sim_accessibility
  elsif subcmd == 'location'
      calabash_sim_location(ARGV)
  elsif subcmd == 'locale'
    calabash_sim_locale(ARGV)
  elsif subcmd == 'device'
    calabash_sim_device(ARGV)
  else
    print_usage
  end
else
  print_usage
end


